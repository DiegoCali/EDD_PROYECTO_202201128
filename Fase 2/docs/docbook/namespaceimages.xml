<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<section xmlns="http://docbook.org/ns/docbook" version="5.0" xmlns:xlink="http://www.w3.org/1999/xlink" xml:id="_namespaceimages" xml:lang="en-US">
<title>images Module Reference</title>
<indexterm><primary>images</primary></indexterm>
<simplesect>
    <title>Data Types    </title>
        <itemizedlist>
            <listitem><para>type <link linkend="_structimages_1_1image">image</link></para>

<para>Type that represents a node in the AVL tree. </para>
</listitem>
            <listitem><para>type <link linkend="_structimages_1_1image__avl">image_avl</link></para>

<para>Type that represents an AVL tree of images. </para>
</listitem>
        </itemizedlist>
</simplesect>
<simplesect>
    <title>Functions/Subroutines    </title>
        <itemizedlist>
            <listitem><para>subroutine <link linkend="_namespaceimages_1ae9fb4295d989ded20aed37781fada93f">delete_img</link> (this, img_id)</para>

<para>Method that deletes an image from the tree. </para>
</listitem>
            <listitem><para>recursive type(<link linkend="_structimages_1_1image">image</link>) function, pointer <link linkend="_namespaceimages_1af85af4efc7840b01027b0995187934bc">delete_img_rec</link> (this, temp, img_id)</para>

<para>Recursive method that deletes an image from the tree. </para>
</listitem>
            <listitem><para>recursive type(<link linkend="_structimages_1_1image">image</link>) function, pointer <link linkend="_namespaceimages_1af9f609fd32d44dc175c082f168666ceb">min_child</link> (this, temp)</para>

<para>Method that returns the node with the minimum value in the tree. </para>
</listitem>
            <listitem><para>subroutine <link linkend="_namespaceimages_1a9ce70395a3dc3e94ffb376cb8d25d644">add_layer</link> (this, new_layer)</para>

<para>Method that adds a layer to the image. </para>
</listitem>
            <listitem><para>subroutine <link linkend="_namespaceimages_1abaa3f06584461d0d3d3342d530ad8b89">add_img</link> (this, new_image)</para>

<para>Method that adds an image to the tree. </para>
</listitem>
            <listitem><para>subroutine <link linkend="_namespaceimages_1a818f67bb377d86228c1ab2d6726e017b">add_img_rec</link> (this, new_image, tmp)</para>

<para>Recursive method that adds an image to the tree. </para>
</listitem>
            <listitem><para>recursive type(<link linkend="_structimages_1_1image">image</link>) function, pointer <link linkend="_namespaceimages_1ab030121b96daea51001d91d9b97bda12">search_img</link> (this, temp, img_ig)</para>

<para>Method that searches for an image in the tree. </para>
</listitem>
            <listitem><para>type(<link linkend="_structimages_1_1image">image</link>) function, pointer <link linkend="_namespaceimages_1a6e491ced3d56dff011eacdce9d9b3b22">srl</link> (this, t1)</para>

<para>Method that performs a single right rotation. </para>
</listitem>
            <listitem><para>type(<link linkend="_structimages_1_1image">image</link>) function, pointer <link linkend="_namespaceimages_1a257bf0f51d93948c7d6ada09d46524bb">srr</link> (this, t1)</para>

<para>Method that performs a single left rotation. </para>
</listitem>
            <listitem><para>type(<link linkend="_structimages_1_1image">image</link>) function, pointer <link linkend="_namespaceimages_1a13829ee1fd288112adc0847a364c7a6c">drl</link> (this, tmp)</para>

<para>Method that performs a double right rotation. </para>
</listitem>
            <listitem><para>type(<link linkend="_structimages_1_1image">image</link>) function, pointer <link linkend="_namespaceimages_1aa5f7fae637a0b808d14ba76b537a0b45">drr</link> (this, tmp)</para>

<para>Method that performs a double left rotation. </para>
</listitem>
            <listitem><para>integer function <link linkend="_namespaceimages_1a5f1f7db26934946493b5439cd3e0667f">get_max</link> (this, val1, val2)</para>

<para>Method that returns the maximum value between two integers. </para>
</listitem>
            <listitem><para>integer function <link linkend="_namespaceimages_1ae11400158ed51b8630ab12fbc4aac028">get_height</link> (this, tmp)</para>

<para>Method that returns the height of a node. </para>
</listitem>
            <listitem><para>subroutine <link linkend="_namespaceimages_1a353bc3744d0b9fcc0651e3e9b17ecf6e">get_dot</link> (this, tmp, unit)</para>

<para>Method that generates the dot representation of the tree. </para>
</listitem>
            <listitem><para>subroutine <link linkend="_namespaceimages_1aed8e9e8d71902d89fef8d6823c7bfe5c">get_dot_rec</link> (this, tmp, unit)</para>

<para>Recursive method that generates the dot representation of the tree. </para>
</listitem>
            <listitem><para>subroutine <link linkend="_namespaceimages_1a65ee8ff468125e5a4865ee5511b5d652">print_images</link> (this, temp)</para>

<para>Method that prints the images in the tree. </para>
</listitem>
            <listitem><para>subroutine <link linkend="_namespaceimages_1ae4b61fd9a69b8d23f1fc0ec82b184f8b">gen_tree_subtree</link> (this, id_img, unit)</para>

<para>Method that generates the dot representation of the tree and its subtree. </para>
</listitem>
            <listitem><para>recursive subroutine <link linkend="_namespaceimages_1af9b5634624df4d9490fc5a7ade1b1f82">gen_layer_subtree</link> (current_layer, unit)</para>

<para>Recursive method that generates the dot representation of the layers subtree. </para>
</listitem>
            <listitem><para>subroutine <link linkend="_namespaceimages_1af46773caf3cd61462dc79f3ec91dcb54">gen_img_traversal</link> (this, unit, id_img)</para>

<para>Method that generates the dot representation of the image traversal. </para>
</listitem>
        </itemizedlist>
</simplesect>
<section>
<title>Function/Subroutine Documentation</title>
<anchor xml:id="_namespaceimages_1abaa3f06584461d0d3d3342d530ad8b89"/>    <section>
    <title>add_img()</title>
<indexterm><primary>add_img</primary><secondary>images</secondary></indexterm>
<indexterm><primary>images</primary><secondary>add_img</secondary></indexterm>
<para><computeroutput>subroutine images::add_img (class(<link linkend="_structimages_1_1image__avl">image_avl</link>), intent(inout) this, type(<link linkend="_structimages_1_1image">image</link>), intent(in), pointer new_image)</computeroutput></para><para>

<para>Method that adds an image to the tree. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>this</entry>
                                <entry>
<para>The <link linkend="_structimages_1_1image__avl">image_avl</link> object </para>
</entry>
                            </row>
                            <row>
                                <entry>new_image</entry>
                                <entry>
<para>The image to add </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 145 of file images.f90.</para>
    </section><anchor xml:id="_namespaceimages_1a818f67bb377d86228c1ab2d6726e017b"/>    <section>
    <title>add_img_rec()</title>
<indexterm><primary>add_img_rec</primary><secondary>images</secondary></indexterm>
<indexterm><primary>images</primary><secondary>add_img_rec</secondary></indexterm>
<para><computeroutput>subroutine images::add_img_rec (class(<link linkend="_structimages_1_1image__avl">image_avl</link>), intent(inout) this, type(<link linkend="_structimages_1_1image">image</link>), intent(in), pointer new_image, type(<link linkend="_structimages_1_1image">image</link>), pointer tmp)</computeroutput></para><para>

<para>Recursive method that adds an image to the tree. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>this</entry>
                                <entry>
<para>The <link linkend="_structimages_1_1image__avl">image_avl</link> object </para>
</entry>
                            </row>
                            <row>
                                <entry>new_image</entry>
                                <entry>
<para>The image to add </para>
</entry>
                            </row>
                            <row>
                                <entry>tmp</entry>
                                <entry>
<para>The current node </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 159 of file images.f90.</para>
    </section><anchor xml:id="_namespaceimages_1a9ce70395a3dc3e94ffb376cb8d25d644"/>    <section>
    <title>add_layer()</title>
<indexterm><primary>add_layer</primary><secondary>images</secondary></indexterm>
<indexterm><primary>images</primary><secondary>add_layer</secondary></indexterm>
<para><computeroutput>subroutine images::add_layer (class(<link linkend="_structimages_1_1image">image</link>), intent(inout) this, type(<link linkend="_structlayers_1_1layer">layer</link>), intent(in), pointer new_layer)</computeroutput></para><para>

<para>Method that adds a layer to the image. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>this</entry>
                                <entry>
<para>The image object </para>
</entry>
                            </row>
                            <row>
                                <entry>new_layer</entry>
                                <entry>
<para>The layer to add </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 136 of file images.f90.</para>
    </section><anchor xml:id="_namespaceimages_1ae9fb4295d989ded20aed37781fada93f"/>    <section>
    <title>delete_img()</title>
<indexterm><primary>delete_img</primary><secondary>images</secondary></indexterm>
<indexterm><primary>images</primary><secondary>delete_img</secondary></indexterm>
<para><computeroutput>subroutine images::delete_img (class(<link linkend="_structimages_1_1image__avl">image_avl</link>), intent(inout) this, integer, intent(in) img_id)</computeroutput></para><para>

<para>Method that deletes an image from the tree. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>this</entry>
                                <entry>
<para>The <link linkend="_structimages_1_1image__avl">image_avl</link> object </para>
</entry>
                            </row>
                            <row>
                                <entry>img_id</entry>
                                <entry>
<para>The id of the image to delete </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 48 of file images.f90.</para>
    </section><anchor xml:id="_namespaceimages_1af85af4efc7840b01027b0995187934bc"/>    <section>
    <title>delete_img_rec()</title>
<indexterm><primary>delete_img_rec</primary><secondary>images</secondary></indexterm>
<indexterm><primary>images</primary><secondary>delete_img_rec</secondary></indexterm>
<para><computeroutput>recursive type(<link linkend="_structimages_1_1image">image</link>) function, pointer images::delete_img_rec (class(<link linkend="_structimages_1_1image__avl">image_avl</link>), intent(inout) this, type(<link linkend="_structimages_1_1image">image</link>), intent(inout), pointer temp, integer, intent(in) img_id)</computeroutput></para><para>

<para>Recursive method that deletes an image from the tree. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>this</entry>
                                <entry>
<para>The <link linkend="_structimages_1_1image__avl">image_avl</link> object </para>
</entry>
                            </row>
                            <row>
                                <entry>temp</entry>
                                <entry>
<para>The current node </para>
</entry>
                            </row>
                            <row>
                                <entry>img_id</entry>
                                <entry>
<para>The id of the image to delete </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>The new subtree </para>
</formalpara>
</para>
<para>
Definition at line 62 of file images.f90.</para>
    </section><anchor xml:id="_namespaceimages_1a13829ee1fd288112adc0847a364c7a6c"/>    <section>
    <title>drl()</title>
<indexterm><primary>drl</primary><secondary>images</secondary></indexterm>
<indexterm><primary>images</primary><secondary>drl</secondary></indexterm>
<para><computeroutput>type(<link linkend="_structimages_1_1image">image</link>) function, pointer images::drl (class(<link linkend="_structimages_1_1image__avl">image_avl</link>), intent(in) this, type(<link linkend="_structimages_1_1image">image</link>), intent(in), pointer tmp)</computeroutput></para><para>

<para>Method that performs a double right rotation. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>this</entry>
                                <entry>
<para>The <link linkend="_structimages_1_1image__avl">image_avl</link> object </para>
</entry>
                            </row>
                            <row>
                                <entry>tmp</entry>
                                <entry>
<para>The node to rotate </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>The new subtree </para>
</formalpara>
</para>
<para>
Definition at line 244 of file images.f90.</para>
    </section><anchor xml:id="_namespaceimages_1aa5f7fae637a0b808d14ba76b537a0b45"/>    <section>
    <title>drr()</title>
<indexterm><primary>drr</primary><secondary>images</secondary></indexterm>
<indexterm><primary>images</primary><secondary>drr</secondary></indexterm>
<para><computeroutput>type(<link linkend="_structimages_1_1image">image</link>) function, pointer images::drr (class(<link linkend="_structimages_1_1image__avl">image_avl</link>), intent(in) this, type(<link linkend="_structimages_1_1image">image</link>), intent(in), pointer tmp)</computeroutput></para><para>

<para>Method that performs a double left rotation. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>this</entry>
                                <entry>
<para>The <link linkend="_structimages_1_1image__avl">image_avl</link> object </para>
</entry>
                            </row>
                            <row>
                                <entry>tmp</entry>
                                <entry>
<para>The node to rotate </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>The new subtree </para>
</formalpara>
</para>
<para>
Definition at line 255 of file images.f90.</para>
    </section><anchor xml:id="_namespaceimages_1af46773caf3cd61462dc79f3ec91dcb54"/>    <section>
    <title>gen_img_traversal()</title>
<indexterm><primary>gen_img_traversal</primary><secondary>images</secondary></indexterm>
<indexterm><primary>images</primary><secondary>gen_img_traversal</secondary></indexterm>
<para><computeroutput>subroutine images::gen_img_traversal (class(<link linkend="_structimages_1_1image__avl">image_avl</link>), intent(inout) this, integer, intent(in) unit, integer, intent(in) id_img)</computeroutput></para><para>

<para>Method that generates the dot representation of the image traversal. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>this</entry>
                                <entry>
<para>The <link linkend="_structimages_1_1image__avl">image_avl</link> object </para>
</entry>
                            </row>
                            <row>
                                <entry>unit</entry>
                                <entry>
<para>The unit to write the dot representation </para>
</entry>
                            </row>
                            <row>
                                <entry>id_img</entry>
                                <entry>
<para>The id of the image to generate the traversal </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 400 of file images.f90.</para>
    </section><anchor xml:id="_namespaceimages_1af9b5634624df4d9490fc5a7ade1b1f82"/>    <section>
    <title>gen_layer_subtree()</title>
<indexterm><primary>gen_layer_subtree</primary><secondary>images</secondary></indexterm>
<indexterm><primary>images</primary><secondary>gen_layer_subtree</secondary></indexterm>
<para><computeroutput>recursive subroutine images::gen_layer_subtree (type(<link linkend="_structlayers_1_1layer">layer</link>), intent(in), pointer current_layer, integer, intent(in) unit)</computeroutput></para><para>

<para>Recursive method that generates the dot representation of the layers subtree. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>current_layer</entry>
                                <entry>
<para>The current layer </para>
</entry>
                            </row>
                            <row>
                                <entry>unit</entry>
                                <entry>
<para>The unit to write the dot representation </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 383 of file images.f90.</para>
Here is the caller graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespaceimages_af9b5634624df4d9490fc5a7ade1b1f82_icgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_namespaceimages_1ae4b61fd9a69b8d23f1fc0ec82b184f8b"/>    <section>
    <title>gen_tree_subtree()</title>
<indexterm><primary>gen_tree_subtree</primary><secondary>images</secondary></indexterm>
<indexterm><primary>images</primary><secondary>gen_tree_subtree</secondary></indexterm>
<para><computeroutput>subroutine images::gen_tree_subtree (class(<link linkend="_structimages_1_1image__avl">image_avl</link>), intent(inout) this, integer, intent(in) id_img, integer, intent(in) unit)</computeroutput></para><para>

<para>Method that generates the dot representation of the tree and its subtree. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>this</entry>
                                <entry>
<para>The <link linkend="_structimages_1_1image__avl">image_avl</link> object </para>
</entry>
                            </row>
                            <row>
                                <entry>id_img</entry>
                                <entry>
<para>The id of the image to generate the subtree </para>
</entry>
                            </row>
                            <row>
                                <entry>unit</entry>
                                <entry>
<para>The unit to write the dot representation </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 337 of file images.f90.</para>
Here is the call graph for this function:<para>
    <informalfigure>
        <mediaobject>
            <imageobject>
                <imagedata width="50%" align="center" valign="middle" scalefit="0" fileref="namespaceimages_ae4b61fd9a69b8d23f1fc0ec82b184f8b_cgraph.png"></imagedata>
            </imageobject>
        </mediaobject>
    </informalfigure>
</para>
    </section><anchor xml:id="_namespaceimages_1a353bc3744d0b9fcc0651e3e9b17ecf6e"/>    <section>
    <title>get_dot()</title>
<indexterm><primary>get_dot</primary><secondary>images</secondary></indexterm>
<indexterm><primary>images</primary><secondary>get_dot</secondary></indexterm>
<para><computeroutput>subroutine images::get_dot (class(<link linkend="_structimages_1_1image__avl">image_avl</link>), intent(in) this, type(<link linkend="_structimages_1_1image">image</link>), intent(in), pointer tmp, integer, intent(in) unit)</computeroutput></para><para>

<para>Method that generates the dot representation of the tree. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>this</entry>
                                <entry>
<para>The <link linkend="_structimages_1_1image__avl">image_avl</link> object </para>
</entry>
                            </row>
                            <row>
                                <entry>tmp</entry>
                                <entry>
<para>The current node </para>
</entry>
                            </row>
                            <row>
                                <entry>unit</entry>
                                <entry>
<para>The unit to write the dot representation </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 291 of file images.f90.</para>
    </section><anchor xml:id="_namespaceimages_1aed8e9e8d71902d89fef8d6823c7bfe5c"/>    <section>
    <title>get_dot_rec()</title>
<indexterm><primary>get_dot_rec</primary><secondary>images</secondary></indexterm>
<indexterm><primary>images</primary><secondary>get_dot_rec</secondary></indexterm>
<para><computeroutput>subroutine images::get_dot_rec (class(<link linkend="_structimages_1_1image__avl">image_avl</link>), intent(in) this, type(<link linkend="_structimages_1_1image">image</link>), intent(in), pointer tmp, integer, intent(in) unit)</computeroutput></para><para>

<para>Recursive method that generates the dot representation of the tree. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>this</entry>
                                <entry>
<para>The <link linkend="_structimages_1_1image__avl">image_avl</link> object </para>
</entry>
                            </row>
                            <row>
                                <entry>tmp</entry>
                                <entry>
<para>The current node </para>
</entry>
                            </row>
                            <row>
                                <entry>unit</entry>
                                <entry>
<para>The unit to write the dot representation </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 303 of file images.f90.</para>
    </section><anchor xml:id="_namespaceimages_1ae11400158ed51b8630ab12fbc4aac028"/>    <section>
    <title>get_height()</title>
<indexterm><primary>get_height</primary><secondary>images</secondary></indexterm>
<indexterm><primary>images</primary><secondary>get_height</secondary></indexterm>
<para><computeroutput>integer function images::get_height (class(<link linkend="_structimages_1_1image__avl">image_avl</link>), intent(in) this, type(<link linkend="_structimages_1_1image">image</link>), intent(in), pointer tmp)</computeroutput></para><para>

<para>Method that returns the height of a node. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>this</entry>
                                <entry>
<para>The <link linkend="_structimages_1_1image__avl">image_avl</link> object </para>
</entry>
                            </row>
                            <row>
                                <entry>tmp</entry>
                                <entry>
<para>The node </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>The height of the node </para>
</formalpara>
</para>
<para>
Definition at line 277 of file images.f90.</para>
    </section><anchor xml:id="_namespaceimages_1a5f1f7db26934946493b5439cd3e0667f"/>    <section>
    <title>get_max()</title>
<indexterm><primary>get_max</primary><secondary>images</secondary></indexterm>
<indexterm><primary>images</primary><secondary>get_max</secondary></indexterm>
<para><computeroutput>integer function images::get_max (class(<link linkend="_structimages_1_1image__avl">image_avl</link>), intent(in) this, integer, intent(in) val1, integer, intent(in) val2)</computeroutput></para><para>

<para>Method that returns the maximum value between two integers. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>this</entry>
                                <entry>
<para>The <link linkend="_structimages_1_1image__avl">image_avl</link> object </para>
</entry>
                            </row>
                            <row>
                                <entry>val1</entry>
                                <entry>
<para>The first value </para>
</entry>
                            </row>
                            <row>
                                <entry>val2</entry>
                                <entry>
<para>The second value </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>The maximum value </para>
</formalpara>
</para>
<para>
Definition at line 267 of file images.f90.</para>
    </section><anchor xml:id="_namespaceimages_1af9f609fd32d44dc175c082f168666ceb"/>    <section>
    <title>min_child()</title>
<indexterm><primary>min_child</primary><secondary>images</secondary></indexterm>
<indexterm><primary>images</primary><secondary>min_child</secondary></indexterm>
<para><computeroutput>recursive type(<link linkend="_structimages_1_1image">image</link>) function, pointer images::min_child (class(<link linkend="_structimages_1_1image__avl">image_avl</link>), intent(inout) this, type(<link linkend="_structimages_1_1image">image</link>), intent(in), pointer temp)</computeroutput></para><para>

<para>Method that returns the node with the minimum value in the tree. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>this</entry>
                                <entry>
<para>The <link linkend="_structimages_1_1image__avl">image_avl</link> object </para>
</entry>
                            </row>
                            <row>
                                <entry>temp</entry>
                                <entry>
<para>The current node </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>The node with the minimum value </para>
</formalpara>
</para>
<para>
Definition at line 124 of file images.f90.</para>
    </section><anchor xml:id="_namespaceimages_1a65ee8ff468125e5a4865ee5511b5d652"/>    <section>
    <title>print_images()</title>
<indexterm><primary>print_images</primary><secondary>images</secondary></indexterm>
<indexterm><primary>images</primary><secondary>print_images</secondary></indexterm>
<para><computeroutput>subroutine images::print_images (class(<link linkend="_structimages_1_1image__avl">image_avl</link>), intent(in) this, type(<link linkend="_structimages_1_1image">image</link>), intent(in), pointer temp)</computeroutput></para><para>

<para>Method that prints the images in the tree. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>this</entry>
                                <entry>
<para>The <link linkend="_structimages_1_1image__avl">image_avl</link> object </para>
</entry>
                            </row>
                            <row>
                                <entry>temp</entry>
                                <entry>
<para>The current node </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                </para>
<para>
Definition at line 323 of file images.f90.</para>
    </section><anchor xml:id="_namespaceimages_1ab030121b96daea51001d91d9b97bda12"/>    <section>
    <title>search_img()</title>
<indexterm><primary>search_img</primary><secondary>images</secondary></indexterm>
<indexterm><primary>images</primary><secondary>search_img</secondary></indexterm>
<para><computeroutput>recursive type(<link linkend="_structimages_1_1image">image</link>) function, pointer images::search_img (class(<link linkend="_structimages_1_1image__avl">image_avl</link>), intent(in) this, type(<link linkend="_structimages_1_1image">image</link>), intent(in), pointer temp, integer, intent(in) img_ig)</computeroutput></para><para>

<para>Method that searches for an image in the tree. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>this</entry>
                                <entry>
<para>The <link linkend="_structimages_1_1image__avl">image_avl</link> object </para>
</entry>
                            </row>
                            <row>
                                <entry>img_ig</entry>
                                <entry>
<para>The id of the image to search </para>
</entry>
                            </row>
                            <row>
                                <entry>temp</entry>
                                <entry>
<para>The current node </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>The image with the id img_ig </para>
</formalpara>
</para>
<para>
Definition at line 195 of file images.f90.</para>
    </section><anchor xml:id="_namespaceimages_1a6e491ced3d56dff011eacdce9d9b3b22"/>    <section>
    <title>srl()</title>
<indexterm><primary>srl</primary><secondary>images</secondary></indexterm>
<indexterm><primary>images</primary><secondary>srl</secondary></indexterm>
<para><computeroutput>type(<link linkend="_structimages_1_1image">image</link>) function, pointer images::srl (class(<link linkend="_structimages_1_1image__avl">image_avl</link>), intent(in) this, type(<link linkend="_structimages_1_1image">image</link>), intent(in), pointer t1)</computeroutput></para><para>

<para>Method that performs a single right rotation. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>this</entry>
                                <entry>
<para>The <link linkend="_structimages_1_1image__avl">image_avl</link> object </para>
</entry>
                            </row>
                            <row>
                                <entry>t1</entry>
                                <entry>
<para>The node to rotate </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>The new subtree </para>
</formalpara>
</para>
<para>
Definition at line 216 of file images.f90.</para>
    </section><anchor xml:id="_namespaceimages_1a257bf0f51d93948c7d6ada09d46524bb"/>    <section>
    <title>srr()</title>
<indexterm><primary>srr</primary><secondary>images</secondary></indexterm>
<indexterm><primary>images</primary><secondary>srr</secondary></indexterm>
<para><computeroutput>type(<link linkend="_structimages_1_1image">image</link>) function, pointer images::srr (class(<link linkend="_structimages_1_1image__avl">image_avl</link>), intent(in) this, type(<link linkend="_structimages_1_1image">image</link>), intent(in), pointer t1)</computeroutput></para><para>

<para>Method that performs a single left rotation. </para>
</para>

<para>
                <formalpara>
                    <title>
Parameters                    </title>
                    <para>
                    <table frame="all">
                        <tgroup cols="2" align="left" colsep="1" rowsep="1">
                        <colspec colwidth="1*"/>
                        <colspec colwidth="4*"/>
                        <tbody>
                            <row>
                                <entry>this</entry>
                                <entry>
<para>The <link linkend="_structimages_1_1image__avl">image_avl</link> object </para>
</entry>
                            </row>
                            <row>
                                <entry>t1</entry>
                                <entry>
<para>The node to rotate </para>
</entry>
                            </row>
                        </tbody>
                        </tgroup>
                    </table>
                    </para>
                </formalpara>
                <formalpara><title>Returns</title>

<para>The new subtree </para>
</formalpara>
</para>
<para>
Definition at line 230 of file images.f90.</para>
</section>
</section>
</section>
